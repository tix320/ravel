name: Release

on:
  push:
    branches:
      - master

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Java 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Extract Last Version Tag
        id: previoustag
        uses: oprypin/find-latest-tag@v1
        with:
          repository: ${{ github.repository }}
          prefix: v

      - name: Retrieve Version from `build.gradle`
        id: retrieve_version
        run: echo "VERSION=$(./gradlew -q properties | grep "^version:" | awk '{print $2}')" >> $GITHUB_ENV

      - name: Resolve New Tag Name
        id: resolve_new_tag_name
        run: echo "tag=v${{ env.version }}" >> $GITHUB_ENV

      - name: Import GPG Key
        run: |
          echo "${{ secrets.SIGNING_PRIVATE_KEY }}" | gpg --batch --yes --no-tty --import
          echo "${{ secrets.SIGNING_PASSWORD }}" | gpg --batch --yes --pinentry-mode loopback --passphrase-fd 0 --export-secret-keys > /tmp/secret.gpg

      - name: Release to Sonatype
        if: ${{ steps.previoustag.outputs.tag != env.tag }}
        run: |
          ./gradlew publishToSonatype closeAndReleaseSonatypeStagingRepository --no-daemon \
            -Psigning.keyId=${{ secrets.SIGNING_KEY_ID }} \
            -Psigning.password=${{ secrets.SIGNING_PASSWORD }} \
            -Psigning.secretKeyRingFile=/tmp/secret.gpg
        env:
          ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.SONATYPE_USERNAME }}
          ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.SONATYPE_PASSWORD }}

      - name: Create Tag
        if: ${{ steps.previoustag.outputs.tag != env.tag }}
        uses: negz/create-tag@v1
        with:
          version: ${{ env.tag }}
          message: Release ${{ env.tag }}
          token: ${{ secrets.GITHUB_TOKEN }}